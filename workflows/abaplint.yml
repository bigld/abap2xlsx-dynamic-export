name: ABAP Lint, Test and Downport  
  
on:  
  push:  
    branches: [ main, develop, 702 ]  
  pull_request:  
    branches: [ main, develop, 702 ]  
  
jobs:  
  abaplint-and-test:  
    runs-on: ubuntu-latest  
      
    steps:  
    - name: Checkout code  
      uses: actions/checkout@v4  
      with:  
        fetch-depth: 0  
          
    - name: Setup Node.js  
      uses: actions/setup-node@v4  
      with:  
        node-version: '20'  
          
    - name: Install abaplint  
      run: npm install -g @abaplint/cli  
          
    - name: Run abaplint syntax check  
      run: abaplint --format json > abaplint-results.json  
      continue-on-error: true  
        
    - name: Display abaplint results  
      run: cat abaplint-results.json  
        
    - name: Check for syntax errors  
      run: |  
        if grep -q '"severity":"error"' abaplint-results.json; then  
          echo "❌ Syntax errors found!"  
          grep '"severity":"error"' abaplint-results.json  
          exit 1  
        else  
          echo "✅ No syntax errors found."  
        fi  
          
    - name: Run unit tests via abaplint  
      run: |  
        echo "🧪 Running unit tests..."  
        abaplint --format json --rules unit_test_missing > unit-test-results.json  
          
        if grep -q '"severity":"error"' unit-test-results.json; then  
          echo "❌ Unit test validation failed!"  
          cat unit-test-results.json  
          exit 1  
        else  
          echo "✅ Unit tests validation passed."  
        fi  
          
    - name: Upload test results  
      uses: actions/upload-artifact@v4  
      if: always()  
      with:  
        name: abaplint-results  
        path: |  
          abaplint-results.json  
          unit-test-results.json  
  
  downport-702:  
    runs-on: ubuntu-latest  
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  
    needs: abaplint-and-test  
      
    steps:  
    - name: Checkout code  
      uses: actions/checkout@v4  
      with:  
        fetch-depth: 0  
        token: ${{ secrets.GITHUB_TOKEN }}  
          
    - name: Setup Node.js for downporting  
      uses: actions/setup-node@v4  
      with:  
        node-version: '20'  
          
    - name: Install ABAP downporting tools  
      run: npm install -g @abaplint/cli  
          
    - name: Configure Git  
      run: |  
        git config --local user.email "action@github.com"  
        git config --local user.name "GitHub Action Bot"  
          
    - name: Create or checkout 702 branch  
      run: |  
        if git ls-remote --heads origin 702 | grep -q 702; then  
          echo "📋 Branch 702 exists, checking out..."  
          git checkout 702  
          git pull origin 702  
        else  
          echo "🆕 Creating new branch 702..."  
          git checkout -b 702  
        fi  
        git reset --hard origin/main  
          
    - name: Apply ABAP 7.02 downporting  
      run: |  
        echo "🔄 Applying ABAP 7.02 compatibility changes..."  
        find src -name "*.abap" -type f | while read file; do  
          echo "Processing: $file"  
          sed -i 's/DATA(\([^)]*\))/DATA \1/g' "$file"  
          sed -i 's/VALUE #(/VALUE /g' "$file"  
          sed -i 's/REF #(/REF /g' "$file"  
          sed -i 's/|\([^|]*\)|/\1/g' "$file"  
          sed -i 's/CONV \([^(]*\)(/CAST \1(/g' "$file"  
          sed -i 's/NEW #(/CREATE OBJECT /g' "$file"  
          sed -i 's/CORRESPONDING #(/MOVE-CORRESPONDING /g' "$file"  
        done  
          
    - name: Create 702 compatibility documentation  
      run: |  
        cat > ABAP_702_COMPATIBILITY.md << 'EOF'  
        # ABAP 7.02 Compatibility Notes  
          
        This branch contains code automatically downported for ABAP 7.02 compatibility.  
          
        ## Changes Applied:  
        - Inline declarations converted to explicit DATA statements  
        - VALUE # constructors replaced with explicit constructors    
        - REF # replaced with explicit REF statements  
        - String templates simplified where possible  
        - CONV replaced with CAST where applicable  
        - NEW # replaced with CREATE OBJECT patterns  
        - CORRESPONDING # replaced with MOVE-CORRESPONDING  
          
        ## Original Branch: main  
        ## Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
        ## Commit: ${{ github.sha }}  
          
        **Note:** This is an automatically generated branch.   
        Manual verification may be required for complex syntax patterns.  
        EOF  
          
    - name: Create 702 abaplint config  
      run: |  
        cat > abaplint-702.json << 'EOF'  
        {  
          "global": {  
            "files": "/src/**/*.abap"  
          },  
          "syntax": {  
            "version": "v702"  
          },  
          "rules": {  
            "parser_error": true,  
            "check_syntax": true,  
            "inline_data_old_versions": true  
          }  
        }  
        EOF  
          
    - name: Validate downported code  
      run: |  
        echo "🔍 Validating downported code..."  
        abaplint --config abaplint-702.json --format json > downport-validation.json || true  
          
        if grep -q '"severity":"error"' downport-validation.json; then  
          echo "⚠️  Downporting validation found issues:"  
          cat downport-validation.json  
          echo "Proceeding with commit but manual review recommended."  
        else  
          echo "✅ Downported code validation passed."  
        fi  
          
    - name: Commit and push changes  
      run: |  
        if git diff --quiet && git diff --staged --quiet; then  
          echo "📝 No changes detected after downporting."  
        else  
          echo "💾 Committing downported changes..."  
          git add .  
          git commit -m "🔄 Auto-downport to ABAP 7.02 compatibility  
            
          - Applied syntax downporting from main branch  
          - Converted modern ABAP syntax to 7.02 compatible patterns  
          - Source commit: ${{ github.sha }}  
          - Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
            
          [skip ci]"  
            
          echo "🚀 Pushing to 702 branch..."  
          git push origin 702  
          echo "✅ Successfully updated 702 branch with downported code."  
        fi  
  
  code-quality:  
    runs-on: ubuntu-latest  
    needs: abaplint-and-test  
    if: always()  
      
    steps:  
    - name: Checkout code  
      uses: actions/checkout@v4  
        
    - name: Code complexity analysis  
      run: |  
        echo "📈 Analyzing code complexity and maintainability..."  
        echo "## Code Statistics" >> $GITHUB_STEP_SUMMARY  
        echo "- ABAP files: $(find src -name '*.abap' | wc -l)" >> $GITHUB_STEP_SUMMARY  
        echo "- Total lines: $(find src -name '*.abap' -exec cat {} \; | wc -l)" >> $GITHUB_STEP_SUMMARY  
        echo "- Classes: $(grep -r "^CLASS.*DEFINITION" src | wc -l)" >> $GITHUB_STEP_SUMMARY  
        echo "- Interfaces: $(grep -r "^INTERFACE" src | wc -l)" >> $GITHUB_STEP_SUMMARY  
        echo "- Methods: $(grep -r "METHODS.*FOR TESTING\|METHODS.*" src | wc -l)" >> $GITHUB_STEP_SUMMARY  
        echo "## Unit Test Coverage" >> $GITHUB_STEP_SUMMARY  
        echo "- Test classes: $(grep -r "FOR TESTING" src | wc -l)" >> $GITHUB_STEP_SUMMARY  
        echo "- Test methods: $(grep -r "FOR TESTING" src -A 20 | grep "METHODS.*FOR TESTING" | wc -l)" >> $GITHUB_STEP_SUMMARY